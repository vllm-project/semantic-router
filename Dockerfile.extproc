# Build the Rust library using Makefile
FROM rust:1.85 AS rust-builder

# Install make and other build dependencies including cross-compilation tools
RUN apt-get update && apt-get install -y \
    make \
    build-essential \
    pkg-config \
    lld \
    clang \
    gcc-aarch64-linux-gnu \
    && rm -rf /var/lib/apt/lists/*

# Set up Rust for cross-compilation
RUN rustup target add aarch64-unknown-linux-gnu x86_64-unknown-linux-gnu

# Configure Cargo for optimized builds
ENV CARGO_NET_GIT_FETCH_WITH_CLI=true
ENV CARGO_INCREMENTAL=1
ENV CARGO_PROFILE_RELEASE_LTO=thin
ENV CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1
ENV RUSTFLAGS="-C link-arg=-fuse-ld=lld"

WORKDIR /app

# Copy dependency files first for better layer caching
COPY candle-binding/Cargo.toml ./candle-binding/
# Copy Cargo.lock if it exists in the build context
COPY candle-binding/Cargo.loc[k] ./candle-binding/
COPY tools/make/ tools/make/
COPY Makefile ./

# Pre-build dependencies to cache them
RUN cd candle-binding && \
    mkdir -p src && \
    echo "fn main() {}" > src/lib.rs && \
    cargo build --release && \
    rm -rf src

# Copy source code and build
COPY candle-binding/src/ ./candle-binding/src/

# Use Makefile to build the Rust library (rebuild with actual source code)
RUN echo "Building Rust library with actual source code..." && \
    echo "Checking source files:" && \
    ls -la candle-binding/src/ && \
    echo "Forcing clean rebuild..." && \
    cd candle-binding && \
    cargo clean && \
    cargo build --release && \
    echo "Checking built library:" && \
    find target -name "*.so" -type f && \
    ls -la target/release/

# Build the Go application
FROM golang:1.24 AS go-builder

WORKDIR /app

# Copy Go module files first for better layer caching
RUN mkdir -p src/semantic-router
COPY src/semantic-router/go.mod src/semantic-router/go.sum src/semantic-router/
COPY candle-binding/go.mod candle-binding/semantic-router.go candle-binding/

# Download Go dependencies (cached layer)
RUN cd src/semantic-router && go mod download

# Copy semantic-router source code
COPY src/semantic-router/ src/semantic-router/

# Copy the built Rust library from rust-builder
COPY --from=rust-builder /app/candle-binding/target/release/libcandle_semantic_router.so /app/candle-binding/target/release/

# Set environment variables for CGO to find the library
ENV CGO_ENABLED=1
ENV LD_LIBRARY_PATH=/app/candle-binding/target/release
ENV GOOS=linux

# Build the router binary with optimizations
RUN mkdir -p bin && cd src/semantic-router && \
    go build -ldflags="-w -s" -o ../../bin/router cmd/main.go

# Final stage: copy the binary and the shared library
FROM quay.io/centos/centos:stream9

WORKDIR /app

COPY --from=go-builder /app/bin/router /app/extproc-server
COPY --from=go-builder /app/candle-binding/target/release/libcandle_semantic_router.so /app/lib/
COPY config/config.yaml /app/config/

ENV LD_LIBRARY_PATH=/app/lib

EXPOSE 50051

# Copy entrypoint to allow switching config via env var CONFIG_FILE
COPY scripts/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]
