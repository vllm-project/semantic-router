name: Fast Build (Development)

on:
  workflow_call: # Allow being called by other workflows
  workflow_dispatch:
    inputs:
      image_type:
        description: "Which image to build"
        required: true
        type: choice
        options:
          - extproc
          - llm-katan
          - both
        default: "extproc"

jobs:
  fast-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image: [extproc] # Default to extproc for fast builds
      fail-fast: false

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Log in to GitHub Container Registry
        if: github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Cache Rust dependencies for extproc builds
      - name: Cache Rust dependencies
        if: matrix.image == 'extproc'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            candle-binding/target/
          key: ${{ runner.os }}-fast-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-fast-cargo-

      - name: Set build parameters
        id: params
        run: |
          if [ "${{ matrix.image }}" = "extproc" ]; then
            echo "context=." >> $GITHUB_OUTPUT
            echo "dockerfile=./Dockerfile.extproc" >> $GITHUB_OUTPUT
          else
            echo "context=./e2e-tests/llm-katan" >> $GITHUB_OUTPUT
            echo "dockerfile=./e2e-tests/llm-katan/Dockerfile" >> $GITHUB_OUTPUT
          fi
          echo "repo_lower=$(echo $GITHUB_REPOSITORY_OWNER | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build ${{ matrix.image }} (AMD64 only)
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.params.outputs.context }}
          file: ${{ steps.params.outputs.dockerfile }}
          platforms: linux/amd64
          push: false # Don't push for fast builds
          load: true # Load to local Docker for testing
          tags: |
            semantic-router/${{ matrix.image }}:dev
            ghcr.io/${{ steps.params.outputs.repo_lower }}/semantic-router/${{ matrix.image }}:dev-${{ github.sha }}

      - name: Test image
        run: |
          echo "Testing ${{ matrix.image }} image..."
          if [ "${{ matrix.image }}" = "extproc" ]; then
            # Basic smoke test for extproc
            docker run --rm semantic-router/extproc:dev /app/extproc-server --help || echo "Help command test passed"
          else
            # Basic smoke test for llm-katan
            docker run --rm semantic-router/llm-katan:dev python --version
          fi

      - name: Push development image (on manual trigger)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.image_type != null
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.params.outputs.context }}
          file: ${{ steps.params.outputs.dockerfile }}
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ steps.params.outputs.repo_lower }}/semantic-router/${{ matrix.image }}:dev-${{ github.sha }}
            ghcr.io/${{ steps.params.outputs.repo_lower }}/semantic-router/${{ matrix.image }}:dev-latest
