name: Documentation Accuracy Check

on:
  pull_request:
    paths:
      - 'website/docs/**'
      - 'config/**'
      - 'src/**'
      - 'candle-binding/**'
  workflow_dispatch:
    inputs:
      epochs:
        description: 'Number of epochs to run'
        required: false
        default: '5'

jobs:
  check-docs-accuracy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Add any Python dependencies if needed
      
      - name: Run documentation accuracy check
        run: |
          EPOCHS="${{ github.event.inputs.epochs || '5' }}"
          echo "Running documentation accuracy check with $EPOCHS epochs..."
          python3 tools/docs-accuracy-checker.py \
            --epochs "$EPOCHS" \
            --build-cmd "echo 'Build skipped in CI'" \
            --linkcheck-cmd "echo 'Link check skipped in CI'"
      
      - name: Upload capability inventory
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-accuracy-capabilities
          path: /tmp/docs-accuracy-epoch-*/capabilities.json
          retention-days: 7
      
      - name: Upload issues report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-accuracy-issues
          path: /tmp/docs-accuracy-epoch-*/issues.json
          retention-days: 7
      
      - name: Upload validation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-accuracy-validation
          path: /tmp/docs-accuracy-epoch-*/validation.json
          retention-days: 7
      
      - name: Upload final report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-accuracy-final-report
          path: /tmp/docs-accuracy-final-report.json
          retention-days: 30
      
      - name: Generate summary
        if: always()
        run: |
          echo "## Documentation Accuracy Check Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f /tmp/docs-accuracy-final-report.json ]; then
            echo "### Summary" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            cat /tmp/docs-accuracy-final-report.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            
            # Extract key metrics
            TOTAL_DOCS=$(jq -r '.summary.total_docs_checked' /tmp/docs-accuracy-final-report.json)
            TOTAL_ISSUES=$(jq -r '.summary.total_issues_found' /tmp/docs-accuracy-final-report.json)
            TOTAL_CAPABILITIES=$(jq -r '.summary.total_capabilities_discovered' /tmp/docs-accuracy-final-report.json)
            
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Key Metrics" >> $GITHUB_STEP_SUMMARY
            echo "- 📄 Documents checked: **$TOTAL_DOCS**" >> $GITHUB_STEP_SUMMARY
            echo "- 🔧 Capabilities discovered: **$TOTAL_CAPABILITIES**" >> $GITHUB_STEP_SUMMARY
            echo "- ⚠️ Issues found: **$TOTAL_ISSUES**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📦 Detailed reports are available in the workflow artifacts." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Final report not generated. Check the workflow logs for errors." >> $GITHUB_STEP_SUMMARY
          fi

  # Optional: Comment results on PR
  comment-results:
    runs-on: ubuntu-latest
    needs: check-docs-accuracy
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
    
    steps:
      - name: Download final report
        uses: actions/download-artifact@v4
        with:
          name: docs-accuracy-final-report
      
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let report = {};
            try {
              report = JSON.parse(fs.readFileSync('docs-accuracy-final-report.json', 'utf8'));
            } catch (error) {
              console.log('Could not read report file');
              return;
            }
            
            const body = `## 📊 Documentation Accuracy Check Results
            
            **Summary:**
            - 📄 Documents checked: **${report.summary.total_docs_checked}**
            - 🔧 Capabilities discovered: **${report.summary.total_capabilities_discovered}**
            - ⚠️ Issues found: **${report.summary.total_issues_found}**
            - ✅ Claims checked: **${report.summary.total_claims_checked}**
            - 🔧 Claims fixed: **${report.summary.total_claims_fixed}**
            
            **Epochs:** ${report.summary.total_epochs}
            
            <details>
            <summary>Per-Epoch Details</summary>
            
            ${report.epochs.map(epoch => `
            ### Epoch ${epoch.epoch}
            - Documents: ${epoch.docs_checked}
            - Capabilities: ${epoch.capabilities_found}
            - Issues: ${epoch.issues_found}
            - Build: ${epoch.build_success ? '✅ Success' : '❌ Failed'}
            `).join('\n')}
            
            </details>
            
            📦 See workflow artifacts for detailed reports.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
